<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  
  <configSections>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core" />
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
  </configSections>

  <spring>

    <context>
      <resource uri="config://spring/objects" />
    </context>
    <!--ObjectNameAutoProxyCreator可以用特定的文本值或通配符匹配目标对象的名称，并为满足条件的目标对象创建AOP代理。
  该类支持模式匹配字符串，如："*name"，"name*"，”*name*“和精确文本如"name"。我们可以通过下面这个简单的例子了解一下自动代理的功能。-->

    <objects xmlns="http://www.springframework.net" xmlns:aop="http://www.springframework.net/aop">
      <description>配置实现AOP</description>

      <object id="ProxyCreator" type="Spring.Aop.Framework.AutoProxy.ObjectNameAutoProxyCreator, Spring.Aop">

        <!--配置需要拦截的目标类，这里*指向下面的两个service-->
        <property name="ObjectNames">
          <list>
            <value>*Service</value>
          </list>
        </property>

        <!--配置拦截器-->
        <property name="InterceptorNames">
          <list>
            <value>aroundAdvisor</value>
          </list>
        </property>
      </object>

      <!--拦截器-->
      <object id="aroundAdvice" type="Spring.Net.Demo.Lesson15.Advice.AroundAdvice, Spring.Net.Demo.Lesson15"/>
      
      <!--动态拦截器，指定方法-->
      <object id="aroundAdvisor" type="Spring.Aop.Support.NameMatchMethodPointcutAdvisor, Spring.Aop">
        <property name="Advice" ref="aroundAdvice"/>
        <property name="MappedNames">
          <list>
            <!--只执行Find方法-->
            <value>Find*</value>
          </list>
        </property>
      </object>

      

      <object id="categoryService" type="Spring.Net.Demo.Lesson15.Service.CategoryService, Spring.Net.Demo.Lesson15"/>
      <object id="productService" type="Spring.Net.Demo.Lesson15.Service.ProductService, Spring.Net.Demo.Lesson15"/>

    </objects>

  </spring>
</configuration>